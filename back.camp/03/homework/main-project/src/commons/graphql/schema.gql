# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthorEntity {
  id: ID!
  name: String!
  description: String!
}

type PublisherEntity {
  id: ID!
  name: String!
  description: String!
}

type BookEntity {
  id: ID!
  title: String!
  subtitle: String!
  description: String!
  page: Int!
  isbn_10: String!
  isbn_13: String!
  publish_at: DateTime!
  publisher: PublisherEntity!
  author: AuthorEntity!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductTagEntity {
  id: ID!
  name: String!
  products: [ProductEntity!]!
}

type ProductPriceEntity {
  id: ID!
  price: Int!
  updateAt: DateTime!
}

type ProductCategorySearchEntity {
  id: ID!
  name: String!
  c1: String!
  c2: String
  c3: String
  c4: String
}

type ProductEntity {
  id: ID!
  url: String!
  stock_count: Int!
  selling_count: Int!
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
  price: ProductPriceEntity!
  book: BookEntity!
  productCategory: ProductCategorySearchEntity!
  productTags: [ProductTagEntity!]!
}

type ResultMessage {
  id: String
  msg: String!
  isSuccess: Boolean!
}

type ProductCategoryEntity {
  id: ID!
  name: String!
}

type FetchProductCategoryOutput {
  id: ID!
  name: String!
  children: [FetchProductCategoryOutput!]!
}

type UserEntity {
  id: ID!
  name: String!
  email: String!
  pwd: String!
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime!
}

type Query {
  fetchBooks: [BookEntity!]!
  fetchBook(bookID: String!): BookEntity!
  fetchProducts: [ProductEntity!]!
  fetchProductsWithDeleted: [ProductEntity!]!
  fetchProduct(productID: String!): ProductEntity
  fetchProductWithDeleted(productID: String!): ProductEntity
  fetchCategorysByTree: [FetchProductCategoryOutput!]!
  fetchCategoryByTree(categoryID: String!): FetchProductCategoryOutput!
  fetchCategorys: [ProductCategorySearchEntity!]!
}

type Mutation {
  createBook(createBookInput: CreateBookInput!): BookEntity!
  updateBook(bookID: String!, updateBookInput: UpdateBookInput!): BookEntity!
  deleteBookAll: String!
  createProduct(createProductInput: CreateProductInput!): ProductEntity!
  updateProduct(productID: String!, updateProductInput: UpdateProductInput!): ProductEntity!
  restoreProduct(productID: String!): ResultMessage!
  deleteProductAll: ResultMessage!
  softDeleteProductAll: ResultMessage!
  deleteProduct(productID: String!): ResultMessage!
  softDeleteProduct(productID: String!): ResultMessage!
  createCategory(createProductCategoryInput: CreateProductCategoryInput!): ProductCategoryEntity!
  deleteCategory(categoryID: String!): ResultMessage!
  deleteCategoryAll: ResultMessage!
  createCategorySearch: [ProductCategorySearchEntity!]!
}

input CreateBookInput {
  title: String!
  subtitle: String!
  description: String!
  page: Int!
  isbn_10: String!
  isbn_13: String!
  publish_at: DateTime!
}

input UpdateBookInput {
  title: String
  subtitle: String
  description: String
  page: Int
  isbn_10: String
  isbn_13: String
  publish_at: DateTime
}

input CreateProductInput {
  url: String!
  stock_count: Int!
  price: Int!
}

input UpdateProductInput {
  url: String
  stock_count: Int
  price: Int
}

input CreateProductCategoryInput {
  name: String!
  parentID: ID
}