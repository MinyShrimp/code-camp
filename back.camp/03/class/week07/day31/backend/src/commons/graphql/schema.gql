# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BoardEntity {
  id: Int!
  writer: String!
  title: String!
  contents: String!
}

type UserEntity {
  id: ID!
  name: String!
  email: String!
  age: Int!
  amount: Int!
}

type ProductTagEntity {
  id: ID!
  name: String!
  products: [ProductEntity!]!
}

type ProductCategoryEntity {
  id: ID!
  name: String!
}

type ProductSalesLocationEntity {
  id: ID!
  address: String!
  addressDetail: String!
  lat: Float!
  lng: Float!
  meetingTime: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductEntity {
  id: ID!
  name: String!
  description: String!
  price: Int!
  isSoldout: Boolean!
  productCategory: ProductCategoryEntity!
  productSaleslocation: ProductSalesLocationEntity!
  user: UserEntity!
  productTags: [ProductTagEntity!]!
}

type PointTransationEntity {
  id: ID!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type Payment {
  id: String!
  amount: Int!
}

type Query {
  fetchBoards: [BoardEntity!]!
  fetchBoard(boardID: String!): BoardEntity!
  fetchProducts: [ProductEntity!]!
  searchProducts(search: String): [ProductEntity!]!
  fetchProduct(productID: String!): ProductEntity!
  fetchProductCategoryAll: [ProductCategoryEntity!]!
  fetchUsers: [UserEntity!]!
  fetchUser: String!
  fetchPayments: [Payment!]!
}

type Mutation {
  createBoard(createBoardInput: CreateBoardInput!): BoardEntity!
  createProduct(createProductInput: CreateProductInput!): ProductEntity!
  updateProduct(productID: String!, updateProductInput: UpdateProductInput!): ProductEntity!
  deleteProductAll: String!
  deleteProduct(productID: String!): String!
  createProductCategory(name: String!): ProductCategoryEntity!
  deleteProductCategoryAll: String!
  signUp(signupInput: SignupInput!): UserEntity!
  Login(loginInput: LoginInput!): String!
  restoreAccessToken: String!
  createPointTransaction(createPointTransactionInput: CreatePointTransactionInput!): PointTransationEntity!
  createPayment(amount: Float!): Payment!
  uploadFile(files: [Upload!]!): [String!]!
}

input CreateBoardInput {
  writer: String!
  title: String!
  contents: String!
}

input CreateProductInput {
  name: String!
  description: String!
  price: Int!
  productSaleslocation: CreateProductSalesLocationInput!
  productCategoryId: String!
  productTags: [String!]!
}

input CreateProductSalesLocationInput {
  address: String!
  addressDetail: String!
  lat: Float!
  lng: Float!
  meetingTime: DateTime!
}

input UpdateProductInput {
  name: String
  description: String
  price: Int
  productSaleslocation: CreateProductSalesLocationInput
  productCategoryId: String
  productTags: [String!]
}

input SignupInput {
  email: String!
  pwd: String!
  name: String!
  age: Int!
}

input LoginInput {
  email: String!
  pwd: String!
}

input CreatePointTransactionInput {
  impUid: String!
  amount: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload